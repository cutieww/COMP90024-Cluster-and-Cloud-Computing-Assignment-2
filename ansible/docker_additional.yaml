- name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker's official apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

  
    - name: Initialize Swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
      register: swarm_init_result

    - name: Retrieve Docker Swarm join token
      command: docker swarm join-token -q worker
      changed_when: false
      register: swarm_join_token

    - name: Set the Docker Swarm join token as a fact
      set_fact:
        swarm_join_token: "{{ swarm_join_token.stdout_lines[0] }}"

    - name: Display the Docker Swarm join token
      debug:
        var: swarm_join_token

  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted

  - name: Create service
      docker_swarm_service:
        name: my-app
        image: nginx
        replicas: 4
        published_ports:
          - "80:80"


# For creating a docker swarm manager nodes 
- name: Create Swarm services
  hosts: docker_swram
  become: true
  vars_files:
    - variables/docker_vars.yaml

  tasks:
    - name: Create Swarm manager service
      docker_service:
        name: manager-service
        state: present
        image: "your-image-name-here"
        replicas: "{{ manager_num }}"
        endpoint_mode: vip
        networks:
          - name: overlay-network

    - name: Create Swarm worker service
      docker_service:
        name: worker-service
        state: present
        image: "your-image-name-here"
        replicas: "{{ worker_num }}"
        endpoint_mode: vip
        networks:
          - name: overlay-network


  - name: Start Docker service
      systemd:
        name: docker
        state: started

  - name: Start Docker service
      service:
        name: docker
        state: started